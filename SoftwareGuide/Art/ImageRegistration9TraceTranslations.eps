%!PS-Adobe-2.0 EPSF-2.0
%%Title: ImageRegistration9TraceTranslations.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun 23 12:02:42 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 340 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times Roman) findfont 220 scalefont setfont
1.000 UL
LTb
1254 660 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 15.7) Rshow
1.000 UL
LTb
1254 1248 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 15.8) Rshow
1.000 UL
LTb
1254 1836 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 15.9) Rshow
1.000 UL
LTb
1254 2424 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 16) Rshow
1.000 UL
LTb
1254 3012 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 16.1) Rshow
1.000 UL
LTb
1254 3600 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 16.2) Rshow
1.000 UL
LTb
1254 4188 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 16.3) Rshow
1.000 UL
LTb
1254 4776 M
63 0 V
4053 0 R
-63 0 V
-4185 0 R
( 16.4) Rshow
1.000 UL
LTb
1254 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 12.4) Cshow
1.000 UL
LTb
1940 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 12.6) Cshow
1.000 UL
LTb
2626 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 12.8) Cshow
1.000 UL
LTb
3312 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13) Cshow
1.000 UL
LTb
3998 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13.2) Cshow
1.000 UL
LTb
4684 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13.4) Cshow
1.000 UL
LTb
5370 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13.6) Cshow
1.000 UL
LTb
1.000 UL
LTb
1254 660 M
4116 0 V
0 4116 V
-4116 0 V
0 -4116 V
LTb
220 2718 M
currentpoint gsave translate 90 rotate 0 0 M
(Y Translations \(mm\)) Cshow
grestore
LTb
3312 110 M
(X Translations \(mm\)) Cshow
1.000 UP
1.000 UL
LT0
2770 4578 M
3695 2523 L
4693 724 L
211 1093 V
106 -9 V
-202 55 V
-206 -86 V
-212 30 V
-214 18 V
-213 15 V
-212 23 V
-213 34 V
-212 19 V
-211 49 V
-207 81 V
-205 90 V
-179 190 V
-184 163 V
-36 330 V
-55 170 V
80 -60 V
69 25 V
-45 -23 V
-51 12 V
-51 -19 V
-52 6 V
-51 7 V
-49 8 V
-33 5 V
12 -23 V
-12 -6 V
-11 -7 V
-12 -6 V
-12 -4 V
-12 -5 V
-12 -8 V
-11 -1 V
-11 0 V
-11 4 V
-11 2 V
-11 4 V
-11 2 V
-12 2 V
-11 -1 V
-10 0 V
-10 -1 V
-9 -2 V
-10 -2 V
-10 -6 V
-11 -3 V
-11 -5 V
-10 -4 V
-11 -4 V
-11 -3 V
-12 -2 V
-11 0 V
-11 0 V
-12 -2 V
-11 -1 V
-11 3 V
-10 2 V
-10 0 V
-9 -3 V
-10 -2 V
-11 -2 V
-10 0 V
-11 0 V
-11 0 V
-11 0 V
-8 -3 V
-11 -6 V
-10 -1 V
-11 -2 V
-11 -1 V
-11 3 V
-10 4 V
-10 5 V
-8 8 V
-10 1 V
-9 -1 V
-10 -5 V
-8 -8 V
-10 -3 V
-4 0 V
-9 4 V
1 -1 V
-5 1 V
-5 3 V
-4 3 V
-4 1 V
-4 2 V
-4 0 V
-3 0 V
-5 0 V
-3 1 V
-4 2 V
-1 -6 V
-2 2 V
-2 1 V
-2 1 V
-2 2 V
-1 0 V
-3 1 V
1 -1 V
-1 0 V
stroke
1451 2873 M
-1 -1 V
-1 0 V
-1 0 V
-1 0 V
-1 0 V
0 1 V
-1 0 V
0 1 V
-1 0 V
0 1 V
0 1 V
-1 1 V
0 1 V
-1 1 V
0 1 V
-1 0 V
0 1 V
-1 1 V
-1 0 V
-1 0 V
0 1 V
-1 0 V
-1 -2 V
1.000 UP
1.000 UL
LTa
2770 4578 Dia
3695 2523 Dia
4693 724 Dia
4904 1817 Dia
5010 1808 Dia
4808 1863 Dia
4602 1777 Dia
4390 1807 Dia
4176 1825 Dia
3963 1840 Dia
3751 1863 Dia
3538 1897 Dia
3326 1916 Dia
3115 1965 Dia
2908 2046 Dia
2703 2136 Dia
2524 2326 Dia
2340 2489 Dia
2304 2819 Dia
2249 2989 Dia
2329 2929 Dia
2398 2954 Dia
2353 2931 Dia
2302 2943 Dia
2251 2924 Dia
2199 2930 Dia
2148 2937 Dia
2099 2945 Dia
2066 2950 Dia
2078 2927 Dia
2066 2921 Dia
2055 2914 Dia
2043 2908 Dia
2031 2904 Dia
2019 2899 Dia
2007 2891 Dia
1996 2890 Dia
1985 2890 Dia
1974 2894 Dia
1963 2896 Dia
1952 2900 Dia
1941 2902 Dia
1929 2904 Dia
1918 2903 Dia
1908 2903 Dia
1898 2902 Dia
1889 2900 Dia
1879 2898 Dia
1869 2892 Dia
1858 2889 Dia
1847 2884 Dia
1837 2880 Dia
1826 2876 Dia
1815 2873 Dia
1803 2871 Dia
1792 2871 Dia
1781 2871 Dia
1769 2869 Dia
1758 2868 Dia
1747 2871 Dia
1737 2873 Dia
1727 2873 Dia
1718 2870 Dia
1708 2868 Dia
1697 2866 Dia
1687 2866 Dia
1676 2866 Dia
1665 2866 Dia
1654 2866 Dia
1646 2863 Dia
1635 2857 Dia
1625 2856 Dia
1614 2854 Dia
1603 2853 Dia
1592 2856 Dia
1582 2860 Dia
1572 2865 Dia
1564 2873 Dia
1554 2874 Dia
1545 2873 Dia
1535 2868 Dia
1527 2860 Dia
1517 2857 Dia
1513 2857 Dia
1504 2861 Dia
1505 2860 Dia
1500 2861 Dia
1495 2864 Dia
1491 2867 Dia
1487 2868 Dia
1483 2870 Dia
1479 2870 Dia
1476 2870 Dia
1471 2870 Dia
1468 2871 Dia
1464 2873 Dia
1463 2867 Dia
1461 2869 Dia
1459 2870 Dia
1457 2871 Dia
1455 2873 Dia
1454 2873 Dia
1451 2874 Dia
1452 2873 Dia
1451 2873 Dia
1451 2873 Dia
1450 2872 Dia
1450 2872 Dia
1449 2872 Dia
1448 2872 Dia
1448 2872 Dia
1447 2872 Dia
1446 2872 Dia
1446 2873 Dia
1445 2873 Dia
1445 2874 Dia
1444 2874 Dia
1444 2875 Dia
1444 2876 Dia
1443 2877 Dia
1443 2878 Dia
1442 2879 Dia
1442 2880 Dia
1441 2880 Dia
1441 2881 Dia
1440 2882 Dia
1440 2882 Dia
1439 2882 Dia
1438 2882 Dia
1438 2883 Dia
1437 2883 Dia
1436 2881 Dia
1436 2881 Dia
1436 2881 Dia
1.000 UL
LTb
1254 660 M
4116 0 V
0 4116 V
-4116 0 V
0 -4116 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times Roman
