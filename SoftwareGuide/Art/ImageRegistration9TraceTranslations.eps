%!PS-Adobe-2.0 EPSF-2.0
%%Title: ImageRegistration9TraceTranslations.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun 23 11:46:32 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times Roman) findfont 220 scalefont setfont
1.000 UL
LTb
1254 660 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 15.7) Rshow
1.000 UL
LTb
1254 1248 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 15.8) Rshow
1.000 UL
LTb
1254 1836 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 15.9) Rshow
1.000 UL
LTb
1254 2424 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 16) Rshow
1.000 UL
LTb
1254 3012 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 16.1) Rshow
1.000 UL
LTb
1254 3600 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 16.2) Rshow
1.000 UL
LTb
1254 4188 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 16.3) Rshow
1.000 UL
LTb
1254 4776 M
63 0 V
5509 0 R
-63 0 V
-5641 0 R
( 16.4) Rshow
1.000 UL
LTb
1254 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 12.4) Cshow
1.000 UL
LTb
2183 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 12.6) Cshow
1.000 UL
LTb
3111 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 12.8) Cshow
1.000 UL
LTb
4040 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13) Cshow
1.000 UL
LTb
4969 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13.2) Cshow
1.000 UL
LTb
5897 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13.4) Cshow
1.000 UL
LTb
6826 660 M
0 63 V
0 4053 R
0 -63 V
0 -4273 R
( 13.6) Cshow
1.000 UL
LTb
1.000 UL
LTb
1254 660 M
5572 0 V
0 4116 V
-5572 0 V
0 -4116 V
LTb
220 2718 M
currentpoint gsave translate 90 rotate 0 0 M
(Y Translations \(mm\)) Cshow
grestore
LTb
4040 110 M
(X Translations \(mm\)) Cshow
1.000 UP
1.000 UL
LT0
3306 4578 M
4558 2523 L
5909 724 L
286 1093 V
143 -9 V
-273 55 V
-278 -86 V
-288 30 V
-289 18 V
-288 15 V
-288 23 V
-288 34 V
-287 19 V
-286 49 V
-280 81 V
-278 90 V
-242 190 V
-248 163 V
-49 330 V
-75 170 V
108 -60 V
93 25 V
-60 -23 V
-69 12 V
-69 -19 V
-71 6 V
-68 7 V
-67 8 V
-44 5 V
15 -23 V
-15 -6 V
-16 -7 V
-16 -6 V
-17 -4 V
-16 -5 V
-15 -8 V
-15 -1 V
-15 0 V
-15 4 V
-15 2 V
-15 4 V
-15 2 V
-16 2 V
-15 -1 V
-13 0 V
-14 -1 V
-13 -2 V
-13 -2 V
-14 -6 V
-14 -3 V
-15 -5 V
-14 -4 V
-15 -4 V
-14 -3 V
-16 -2 V
-16 0 V
-15 0 V
-16 -2 V
-15 -1 V
-15 3 V
-13 2 V
-13 0 V
-13 -3 V
-14 -2 V
-14 -2 V
-14 0 V
-15 0 V
-15 0 V
-14 0 V
-12 -3 V
-14 -6 V
-14 -1 V
-15 -2 V
-14 -1 V
-15 3 V
-14 4 V
-14 5 V
-10 8 V
-14 1 V
-12 -1 V
-14 -5 V
-10 -8 V
-14 -3 V
-5 0 V
-13 4 V
2 -1 V
-7 1 V
-6 3 V
-6 3 V
-5 1 V
-6 2 V
-6 0 V
-4 0 V
-6 0 V
-4 1 V
-6 2 V
-1 -6 V
-3 2 V
-3 1 V
-2 1 V
-3 2 V
-2 0 V
-3 1 V
0 -1 V
-1 0 V
stroke
1520 2873 M
-1 -1 V
-1 0 V
-1 0 V
-1 0 V
-1 0 V
-1 0 V
0 1 V
-1 0 V
-1 1 V
-1 1 V
0 1 V
-1 1 V
0 1 V
-1 1 V
-1 1 V
-1 1 V
-1 1 V
-1 0 V
-1 0 V
-1 0 V
-1 1 V
-1 0 V
0 -2 V
1.000 UP
1.000 UL
LTa
3306 4578 Dia
4558 2523 Dia
5909 724 Dia
6195 1817 Dia
6338 1808 Dia
6065 1863 Dia
5787 1777 Dia
5499 1807 Dia
5210 1825 Dia
4922 1840 Dia
4634 1863 Dia
4346 1897 Dia
4059 1916 Dia
3773 1965 Dia
3493 2046 Dia
3215 2136 Dia
2973 2326 Dia
2725 2489 Dia
2676 2819 Dia
2601 2989 Dia
2709 2929 Dia
2802 2954 Dia
2742 2931 Dia
2673 2943 Dia
2604 2924 Dia
2533 2930 Dia
2465 2937 Dia
2398 2945 Dia
2354 2950 Dia
2369 2927 Dia
2354 2921 Dia
2338 2914 Dia
2322 2908 Dia
2305 2904 Dia
2289 2899 Dia
2274 2891 Dia
2259 2890 Dia
2244 2890 Dia
2229 2894 Dia
2214 2896 Dia
2199 2900 Dia
2184 2902 Dia
2168 2904 Dia
2153 2903 Dia
2140 2903 Dia
2126 2902 Dia
2113 2900 Dia
2100 2898 Dia
2086 2892 Dia
2072 2889 Dia
2057 2884 Dia
2043 2880 Dia
2028 2876 Dia
2014 2873 Dia
1998 2871 Dia
1982 2871 Dia
1967 2871 Dia
1951 2869 Dia
1936 2868 Dia
1921 2871 Dia
1908 2873 Dia
1895 2873 Dia
1882 2870 Dia
1868 2868 Dia
1854 2866 Dia
1840 2866 Dia
1825 2866 Dia
1810 2866 Dia
1796 2866 Dia
1784 2863 Dia
1770 2857 Dia
1756 2856 Dia
1741 2854 Dia
1727 2853 Dia
1712 2856 Dia
1698 2860 Dia
1684 2865 Dia
1674 2873 Dia
1660 2874 Dia
1648 2873 Dia
1634 2868 Dia
1624 2860 Dia
1610 2857 Dia
1605 2857 Dia
1592 2861 Dia
1594 2860 Dia
1587 2861 Dia
1581 2864 Dia
1575 2867 Dia
1570 2868 Dia
1564 2870 Dia
1558 2870 Dia
1554 2870 Dia
1548 2870 Dia
1544 2871 Dia
1538 2873 Dia
1537 2867 Dia
1534 2869 Dia
1531 2870 Dia
1529 2871 Dia
1526 2873 Dia
1524 2873 Dia
1521 2874 Dia
1521 2873 Dia
1521 2873 Dia
1520 2873 Dia
1519 2872 Dia
1519 2872 Dia
1518 2872 Dia
1517 2872 Dia
1516 2872 Dia
1515 2872 Dia
1514 2872 Dia
1514 2873 Dia
1513 2873 Dia
1512 2874 Dia
1512 2874 Dia
1511 2875 Dia
1511 2876 Dia
1510 2877 Dia
1510 2878 Dia
1509 2879 Dia
1508 2880 Dia
1508 2880 Dia
1507 2881 Dia
1506 2882 Dia
1505 2882 Dia
1504 2882 Dia
1503 2882 Dia
1502 2883 Dia
1501 2883 Dia
1501 2881 Dia
1.000 UL
LTb
1254 660 M
5572 0 V
0 4116 V
-5572 0 V
0 -4116 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times Roman
